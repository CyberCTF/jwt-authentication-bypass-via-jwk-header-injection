<!DOCTYPE html>
<html lang="en" class="dark">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&display=swap" rel="stylesheet">
    <script>
        tailwind.config = {
            darkMode: 'class',
            theme: {
                extend: {
                    fontFamily: {
                        'sans': ['Inter', '-apple-system', 'BlinkMacSystemFont', 'Segoe UI', 'Roboto', 'sans-serif'],
                    },
                    colors: {
                        primary: {
                            50: '#f0f9ff',
                            500: '#3b82f6',
                            600: '#2563eb',
                            700: '#1d4ed8',
                            900: '#1e3a8a'
                        }
                    }
                }
            }
        }
    </script>
    <style>
        .glass {
            background: rgba(255, 255, 255, 0.05);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.1);
        }
        .glass-dark {
            background: rgba(0, 0, 0, 0.2);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.1);
        }
    </style>
</head>
<body class="bg-gray-900 text-white min-h-screen">
    <!-- Navigation -->
    <nav class="glass-dark border-b border-gray-700">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex justify-between h-16">
                <div class="flex items-center">
                    <a href="/" class="flex items-center space-x-2">
                        <div class="w-8 h-8 bg-primary-500 rounded-lg flex items-center justify-center">
                            <span class="text-white font-bold text-sm">OS</span>
                        </div>
                        <span class="text-xl font-bold">Orph√©on Sign</span>
                    </a>
                </div>
                <div class="flex items-center space-x-4">
                    <a href="/documents" class="text-gray-300 hover:text-white px-3 py-2 rounded-md text-sm font-medium transition-colors">
                        Documents
                    </a>
                    <% if (user && user.role === 'admin') { %>
                    <a href="/admin" class="text-gray-300 hover:text-white px-3 py-2 rounded-md text-sm font-medium transition-colors">
                        Admin Portal
                    </a>
                    <% } %>
                    <% if (user) { %>
                    <div class="flex items-center space-x-2">
                        <span class="text-sm text-gray-400"><%= user.sub %></span>
                        <span class="px-2 py-1 bg-primary-600 text-xs rounded-full"><%= user.role %></span>
                    </div>
                    <% } else { %>
                    <a href="/auth/login" class="bg-primary-600 hover:bg-primary-700 text-white px-4 py-2 rounded-md text-sm font-medium transition-colors">
                        Login
                    </a>
                    <% } %>
                </div>
            </div>
        </div>
    </nav>

    <!-- Main Content -->
    <main class="flex-1">

<div class="bg-gradient-to-br from-gray-900 via-gray-800 to-gray-900 min-h-screen">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <!-- Header -->
        <div class="mb-8">
            <h1 class="text-3xl font-bold text-white mb-2">Integrations</h1>
            <p class="text-gray-400">Manage external integrations and webhook configurations</p>
        </div>

        <!-- Navigation Tabs -->
        <div class="mb-8">
            <nav class="flex space-x-8">
                <a href="/admin" class="text-gray-400 hover:text-white pb-2 font-medium transition-colors">
                    Dashboard
                </a>
                <a href="/admin/members" class="text-gray-400 hover:text-white pb-2 font-medium transition-colors">
                    Members
                </a>
                <a href="/admin/integrations" class="text-primary-500 border-b-2 border-primary-500 pb-2 font-medium">
                    Integrations
                </a>
                <a href="/admin/retention" class="text-gray-400 hover:text-white pb-2 font-medium transition-colors">
                    Retention Policy
                </a>
            </nav>
        </div>

        <!-- Webhooks Section -->
        <div class="glass rounded-xl p-8 mb-8">
            <div class="flex items-center justify-between mb-6">
                <div>
                    <h2 class="text-2xl font-semibold text-white mb-2">Webhook Configuration</h2>
                    <p class="text-gray-400">Configure webhook endpoints for real-time notifications</p>
                </div>
                <div class="flex items-center space-x-2">
                    <span class="px-3 py-1 bg-green-600 text-green-100 text-sm rounded-full">Active</span>
                </div>
            </div>

            <div class="space-y-6">
                <!-- Webhook URL -->
                <div>
                    <label class="block text-sm font-medium text-gray-300 mb-2">
                        Webhook URL
                    </label>
                    <div class="flex">
                        <input type="text" 
                               value="https://api.orpheon.com/webhooks/signature-events" 
                               readonly
                               class="flex-1 px-4 py-3 bg-gray-800 border border-gray-600 rounded-l-lg text-white">
                        <button class="px-4 py-3 bg-gray-700 hover:bg-gray-600 border border-l-0 border-gray-600 rounded-r-lg transition-colors">
                            <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
                            </svg>
                        </button>
                    </div>
                </div>

                <!-- Webhook Secret -->
                <div>
                    <label class="block text-sm font-medium text-gray-300 mb-2">
                        Webhook Signing Secret
                    </label>
                    <div class="flex">
                        <input type="password" 
                               id="webhookSecret"
                               value="<%= webhookSecret %>" 
                               readonly
                               class="flex-1 px-4 py-3 bg-gray-800 border border-gray-600 rounded-l-lg text-white font-mono">
                        <button onclick="toggleSecretVisibility()" 
                                class="px-4 py-3 bg-gray-700 hover:bg-gray-600 border border-l-0 border-gray-600 transition-colors">
                            <svg id="eyeIcon" class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                            </svg>
                        </button>
                        <button onclick="copyWebhookSecret()" 
                                class="px-4 py-3 bg-primary-600 hover:bg-primary-700 border border-l-0 border-primary-600 transition-colors">
                            <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
                            </svg>
                        </button>
                        <button onclick="downloadEnvFile()" 
                                class="px-4 py-3 bg-green-600 hover:bg-green-700 border border-l-0 border-green-600 rounded-r-lg transition-colors">
                            <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                            </svg>
                        </button>
                    </div>
                    <p class="text-sm text-gray-400 mt-2">
                        Use this secret to verify webhook signatures. Keep it secure and never expose it publicly.
                    </p>
                </div>

                <!-- Webhook Events -->
                <div>
                    <label class="block text-sm font-medium text-gray-300 mb-2">
                        Subscribed Events
                    </label>
                    <div class="grid grid-cols-2 md:grid-cols-4 gap-4">
                        <label class="flex items-center">
                            <input type="checkbox" checked disabled class="w-4 h-4 text-primary-600 bg-gray-800 border-gray-600 rounded">
                            <span class="ml-2 text-sm text-gray-300">document.signed</span>
                        </label>
                        <label class="flex items-center">
                            <input type="checkbox" checked disabled class="w-4 h-4 text-primary-600 bg-gray-800 border-gray-600 rounded">
                            <span class="ml-2 text-sm text-gray-300">document.uploaded</span>
                        </label>
                        <label class="flex items-center">
                            <input type="checkbox" checked disabled class="w-4 h-4 text-primary-600 bg-gray-800 border-gray-600 rounded">
                            <span class="ml-2 text-sm text-gray-300">user.created</span>
                        </label>
                        <label class="flex items-center">
                            <input type="checkbox" checked disabled class="w-4 h-4 text-primary-600 bg-gray-800 border-gray-600 rounded">
                            <span class="ml-2 text-sm text-gray-300">user.updated</span>
                        </label>
                    </div>
                </div>
            </div>
        </div>

        <!-- API Keys Section -->
        <div class="glass rounded-xl p-8">
            <h2 class="text-2xl font-semibold text-white mb-6">API Keys</h2>
            <div class="space-y-4">
                <div class="flex items-center justify-between p-4 bg-gray-800 rounded-lg">
                    <div>
                        <h3 class="text-white font-medium">Production API Key</h3>
                        <p class="text-gray-400 text-sm">Full access to all API endpoints</p>
                    </div>
                    <div class="flex items-center space-x-2">
                        <span class="px-2 py-1 bg-green-600 text-green-100 text-xs rounded-full">Active</span>
                        <button class="px-3 py-1 bg-gray-700 hover:bg-gray-600 text-white text-sm rounded transition-colors">
                            Regenerate
                        </button>
                    </div>
                </div>
                <div class="flex items-center justify-between p-4 bg-gray-800 rounded-lg">
                    <div>
                        <h3 class="text-white font-medium">Test API Key</h3>
                        <p class="text-gray-400 text-sm">Limited access for testing purposes</p>
                    </div>
                    <div class="flex items-center space-x-2">
                        <span class="px-2 py-1 bg-yellow-600 text-yellow-100 text-xs rounded-full">Test</span>
                        <button class="px-3 py-1 bg-gray-700 hover:bg-gray-600 text-white text-sm rounded transition-colors">
                            Regenerate
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
let secretVisible = false;

function toggleSecretVisibility() {
    const secretInput = document.getElementById('webhookSecret');
    const eyeIcon = document.getElementById('eyeIcon');
    
    if (secretVisible) {
        secretInput.type = 'password';
        eyeIcon.innerHTML = `
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
        `;
    } else {
        secretInput.type = 'text';
        eyeIcon.innerHTML = `
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.878 9.878L3 3m6.878 6.878L21 21"></path>
        `;
    }
    
    secretVisible = !secretVisible;
}

async function copyWebhookSecret() {
    const secretInput = document.getElementById('webhookSecret');
    const secret = secretInput.value;
    
    try {
        await navigator.clipboard.writeText(secret);
        
        // Log the action
        await fetch('/admin/integrations/webhook/copy', {
            method: 'POST',
            headers: getAuthHeaders()
        });
        
        // Show success message
        const toast = document.createElement('div');
        toast.className = 'fixed top-4 right-4 bg-green-600 text-white px-4 py-2 rounded-md shadow-lg z-50';
        toast.textContent = 'Webhook secret copied to clipboard!';
        document.body.appendChild(toast);
        setTimeout(() => toast.remove(), 2000);
    } catch (error) {
        console.error('Failed to copy:', error);
    }
}

async function downloadEnvFile() {
    try {
        const response = await fetch('/admin/export/env', {
            method: 'GET',
            headers: getAuthHeaders()
        });
        
        if (response.ok) {
            const content = await response.text();
            const blob = new Blob([content], { type: 'text/plain' });
            const url = window.URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = '.env';
            document.body.appendChild(a);
            a.click();
            document.body.removeChild(a);
            window.URL.revokeObjectURL(url);
            
            // Show success message
            const toast = document.createElement('div');
            toast.className = 'fixed top-4 right-4 bg-green-600 text-white px-4 py-2 rounded-md shadow-lg z-50';
            toast.textContent = 'Environment file downloaded!';
            document.body.appendChild(toast);
            setTimeout(() => toast.remove(), 2000);
        } else {
            throw new Error('Failed to download file');
        }
    } catch (error) {
        console.error('Download error:', error);
        const toast = document.createElement('div');
        toast.className = 'fixed top-4 right-4 bg-red-600 text-white px-4 py-2 rounded-md shadow-lg z-50';
        toast.textContent = 'Download failed!';
        document.body.appendChild(toast);
        setTimeout(() => toast.remove(), 2000);
    }
}

// Add authentication token to requests
function getAuthHeaders() {
    const token = localStorage.getItem('orpheon_token');
    return {
        'Authorization': `Bearer ${token}`,
        'Content-Type': 'application/json'
    };
}

// Check if user is authenticated and is admin
document.addEventListener('DOMContentLoaded', () => {
    const token = localStorage.getItem('orpheon_token');
    if (!token) {
        window.location.href = '/auth/login';
    }
});
</script>
    </main>

    <!-- Footer -->
    <footer class="glass-dark border-t border-gray-700 mt-auto">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
            <div class="text-center text-gray-400">
                <p>&copy; 2024 Orph√©on Sign. All rights reserved.</p>
                <p class="text-sm mt-2">Secure document workflow and electronic signature platform.</p>
            </div>
        </div>
    </footer>
</body>
</html>
